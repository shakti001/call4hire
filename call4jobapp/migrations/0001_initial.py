# Generated by Django 4.1.6 on 2023-02-13 13:22

import call4jobapp.manager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('roll', models.CharField(choices=[('subadmin', 'Subadmin'), ('admin', 'Admin'), ('company', 'Company')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('Otp', models.CharField(max_length=50)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('company_gst', models.CharField(blank=True, max_length=100, null=True)),
                ('adhaar_card', models.CharField(max_length=50)),
                ('pan_card', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/media')),
                ('company_mobile_number', models.CharField(max_length=50)),
                ('company_address', models.CharField(blank=True, max_length=100, null=True)),
                ('user_status', models.CharField(choices=[('0', 'PENDING'), ('1', 'APPROVED'), ('2', 'REJECTED')], default=0, max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('sidebar_user', 'Can sidebar user'),),
            },
            managers=[
                ('objects', call4jobapp.manager.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('sidebar_dashboard', 'Can sidebar dashboard'), ('view_dashboard', 'Can view dashboard')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Subadmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('sidebar_subadmin', 'Can sidebar subadmin'), ('add_subadmin', 'can add subadmin'), ('change_subadmin', 'can change change'), ('delete_subadmin', 'can delete subadmin'), ('view_subadmin', 'can view subadmin')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_place', models.CharField(max_length=30)),
                ('job_types', models.CharField(max_length=30)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('job_title', models.CharField(max_length=50)),
                ('minimum_exp', models.IntegerField()),
                ('maximum_exp', models.IntegerField()),
                ('minimum_annual_salary', models.CharField(max_length=20)),
                ('maximum_annual_salary', models.CharField(max_length=20)),
                ('company_name', models.CharField(max_length=50)),
                ('no_of_emplyoee', models.CharField(max_length=50)),
                ('higher_education', models.CharField(max_length=50)),
                ('job_location', models.CharField(max_length=100)),
                ('job_description', models.CharField(max_length=100)),
                ('skills', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('job_status', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobpost', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('sidebar_jobpost', 'Can sidebar jobpost'),),
            },
        ),
    ]
